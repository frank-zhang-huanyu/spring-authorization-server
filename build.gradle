buildscript {
	dependencies {
		classpath 'io.spring.gradle:spring-build-conventions:0.0.35.BUILD-SNAPSHOT'
		classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
		classpath 'io.spring.nohttp:nohttp-gradle:0.0.5.RELEASE'
	}
	repositories {
		mavenLocal()
		maven { url 'https://maven.aliyun.com/repository/spring/'}
		maven {
			url = 'https://repo.spring.io/plugins-snapshot'
			if (project.hasProperty('artifactoryUsername')) {
				credentials {
					username "$artifactoryUsername"
					password "$artifactoryPassword"
				}
			}
		}
		maven { url 'https://plugins.gradle.org/m2/' }
	}
}

apply plugin: 'io.spring.nohttp'
apply plugin: 'locks'
apply plugin: 'io.spring.convention.root'

group = 'org.springframework.security.experimental'
description = 'Spring Authorization Server'

ext.snapshotBuild = version.contains("SNAPSHOT")

repositories {
	maven { url 'https://maven.aliyun.com/repository/public/' }
	mavenLocal()
	mavenCentral()
}

dependencyManagementExport.projects = subprojects.findAll { !it.name.contains('-boot') }

subprojects {
	plugins.withType(JavaPlugin) {
		project.sourceCompatibility = "1.8"
	}
	tasks.withType(JavaCompile) {
		options.encoding = "UTF-8"
	}

	repositories {
		maven { url 'https://maven.aliyun.com/repository/public/' }
		mavenLocal()
		mavenCentral()
	}
}

nohttp {
	allowlistFile = project.file("etc/nohttp/allowlist.lines")
}
